<?php

namespace App\Models;

use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Laravel\Fortify\TwoFactorAuthenticatable;
use Laravel\Jetstream\HasProfilePhoto;
use Laravel\Sanctum\HasApiTokens;

class User extends Authenticatable
{
    use HasApiTokens;
    use HasFactory;
    use HasProfilePhoto;
    use Notifiable;
    use TwoFactorAuthenticatable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'name',
        'surname',
        'email',
        'password',
        'height',
        'weight',
        'age',
        'life_style',
        'my_goal',
        'active_until',
    ];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password',
        'remember_token',
        'two_factor_recovery_codes',
        'two_factor_secret',
    ];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];

    /**
     * The accessors to append to the model's array form.
     *
     * @var array
     */
    protected $appends = [
        'profile_photo_url',
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::created( function ($user) {
            $daily_calories = 447.593 + (9.247 * $user->weight) + (3.098 * $user->height) - (4.330 * $user->age);

            switch ($user->life_style){
                case "sedavý typ":{
                    $daily_calories *= 1.2;
                    break;
                }
                case "ľahko aktívny":{
                    $daily_calories *= 1.375;
                    break;
                }
                case "aktívny":{
                    $daily_calories *= 1.55;
                    break;
                }
                case "veľmi aktívny":{
                    $daily_calories *= 1.725;
                    break;
                }
            }

            switch ($user->my_goal){
                case "chcem chudnúť":{
                    $daily_calories -= 300;
                    break;
                }
                case "chcem pribrať":{
                    $daily_calories += 350;
                    break;
                }
            }
            $user->daily_calories = $daily_calories;
            $user->save();
        });
    }


    public function menu(){
        return $this->hasOne(Menu::class);
    }

}
